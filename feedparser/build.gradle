apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
  compileSdkVersion compile_sdk
  buildToolsVersion build_tools_version

  defaultConfig {
    minSdkVersion min_sdk
    targetSdkVersion target_sdk
    versionCode version_code
    versionName version_name

    testInstrumentationRunner test_runner
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "androidx.core:core-ktx:$ktx_core_version"
  implementation "androidx.appcompat:appcompat:$appcompat_version"

  testImplementation "junit:junit:$junit_version"
  testImplementation "org.mockito:mockito-core:$mockito_core_version"
  testImplementation "org.mockito:mockito-inline:$mockito_core_version"
  testImplementation "org.amshove.kluent:kluent:$kluent_version"
  testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
  testImplementation "android.arch.core:core-testing:$android_core_testing_version"
  testImplementation "net.sf.kxml:kxml2:$mock_xmlparser_version"

  androidTestImplementation "androidx.test.ext:junit:$android_junit_version"
  androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
  androidTestImplementation "androidx.annotation:annotation:$annotation_version"
  androidTestImplementation "androidx.test:rules:$test_rules_version"
}

apply from: "maven-push.gradle"
